class PriorityQueue:
    def __init__(self):
        self.data = []

    def is_empty(self):
        return len(self.data) == 0

    def peek(self):
        if self.is_empty():
            return
        return self.data[0]

    def enqueue(self, prioritas, data):
        self.data.append((prioritas, data))
        self.data.sort(reverse=True)

    def dequeue(self):
        if self.is_empty():
            return
        return self.data.pop(0)

    def write_all_data(self):
        print(self.data)

def print_pasien(pq: PriorityQueue):
    data = pq.data
    n = 1
    for p, pasien in data:
        if p == 3:
            prioritas = "Sudah meninggal"
        elif p == 2:
            prioritas = "Merah"
        elif p == 1:
            prioritas = "Kuning"
        else:
            prioritas = "Invalid status"
        print(f"{n}. {pasien}, status: {prioritas}")
        n += 1

def triase_pasien(nama, respirasi, denyut=None, perintah=None):
    if respirasi == 0:
        return 3  # Status Hitam
    elif respirasi > 30 or respirasi < 10:
        return 2  # Status Merah
    elif denyut == 'y':
        return 2  # Status Merah
    elif perintah == 'n':
        return 2  # Status Merah
    else:
        return 1  # Status Kuning

if __name__ == "__main__":
    pq = PriorityQueue()

    for i in range(3):
        print(f"Masukkan data pasien {i+1}")
        
        try:
            nama = input("Nama pasien: ")
            respirasi = int(input("Kecepatan Respirasi per menit: "))

            if respirasi == 0:
                status = triase_pasien(nama, respirasi)
            else:
                denyut = input("Denyut lemah/tidak terasa (y/n): ").strip().lower()
                if denyut not in ('y', 'n'):
                    raise ValueError("Input denyut harus 'y' atau 'n'")
                
                if denyut == 'y':
                    status = triase_pasien(nama, respirasi, denyut)
                else:
                    perintah = input("Apakah bisa diperintah? (y/n): ").strip().lower()
                    if perintah not in ('y', 'n'):
                        raise ValueError("Input perintah harus 'y' atau 'n'")
                    
                    status = triase_pasien(nama, respirasi, denyut, perintah)

            pq.enqueue(status, nama)

        except ValueError as ve:
            print(f"Error: {ve}. Silakan masukkan data lagi.\n")
            continue

    print("\n=== HASIL DATA PASIEN ===")
    print_pasien(pq)
